{"version":3,"sources":["components/Header.js","apis/tasks.js","actions/index.js","components/NewTaskForm.js","components/Users.js","components/history.js","components/CreateUser.js","components/List.js","components/Child.js","components/DeleteUser.js","components/App.js","reducers/TaskReducer.js","reducers/UserReducer.js","reducers/index.js","index.js"],"names":["Header","className","axios","create","baseURL","createUser","user","dispatch","a","tasks","post","responce","type","payload","data","NewTaskForm","onSubmit","taskValue","props","onTaskSubmit","reset","renderInput","input","meta","time","this","timeValue","handleSubmit","Field","name","component","alt","React","Component","reduxForm","form","Users","sendData","parentCallback","showUsers","id","deleteUser","users","map","delUser","key","to","onClick","renderList","renderUser","connect","state","Object","values","get","delete","createBrowserHistory","CreateUser","newUser","history","push","TaskReducer","List","createTask","createUserSubmit","showTasks","task","doneTask","deleteTask","doneValue","onClickDoneTask","onClickDeleteTask","renderTask","undefined","rr","put","Child","useParams","DeleteUser","App","path","exact","children","process","DeleteUsers","action","_","mapKeys","omit","UserReducer","reducer","combineReducers","formReducer","composeE","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ade32df6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className=\"pageHeader\">\r\n            ToDo App App\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:3001'\r\n});","import tasks from '../apis/tasks';\r\n\r\n\r\n\r\nexport const createTask = (taskValue, user) => async dispatch => {\r\n   const doneValue = true;\r\n   const responce = await tasks.post('/tasks', {...taskValue, doneValue, user});\r\n\r\n   dispatch({ type: \"CREATE_TASK\", payload: responce.data })\r\n};\r\n\r\nexport const showTasks = () => async dispatch => {\r\n   const responce = await tasks.get(`/tasks`);\r\n\r\n   dispatch({ type: \"SHOW_TASKS\", payload: responce.data })\r\n};\r\n\r\nexport const doneTask = (task) => async dispatch => {\r\n   const responce = await tasks.put(`/tasks/${task.id}`, {...task, doneValue: !task.doneValue});\r\n\r\n   dispatch({ type: \"DONE_TASK\", payload: responce.data })\r\n};\r\n\r\nexport const deleteTask = id => async dispatch => {\r\n   await tasks.delete(`/tasks/${id}`);\r\n   \r\n   dispatch({ type: \"DELETE_TASK\", payload: id })\r\n}\r\n\r\nexport const createUser = (user) => async dispatch => {\r\n   const responce = await tasks.post('/users', {...user});\r\n\r\n   dispatch({ type: \"CREATE_USER\", payload: responce.data })\r\n};\r\n\r\nexport const showUsers = () => async dispatch => {\r\n   const responce = await tasks.get(`/users`);\r\n\r\n   dispatch({ type: \"SHOW_USERS\", payload: responce.data })\r\n};\r\n\r\nexport const deleteUser = id => async dispatch => {\r\n   await tasks.delete(`/users/${id}`);\r\n   \r\n   dispatch({ type: \"DELETE_USER\", payload: id })\r\n}\r\n\r\n// export const changeTime = (task) => async dispatch => {\r\n//    const responce = await tasks.put(`/tasks/${task.id}`, {...task, timeValue: 'Today'});\r\n\r\n//    dispatch({ type: \"CHANGE_TIME\", payload: responce.data })\r\n// };\r\n\r\n// export const doneTask = (task) => {\r\n//    return {\r\n//       type: 'DONE_TASK',\r\n//       payload: task\r\n//    }\r\n// }\r\n\r\n// export const signIn = (userId) => {\r\n//    return {\r\n//        type: 'SIGN_IN',\r\n//        payload: userId\r\n//    };\r\n// };\r\n\r\n// export const fetchStreams = () => async dispatch => {\r\n//    const responce = await streams.get('/streams');\r\n   \r\n//    dispatch({ type: \"FETCH_STREAMS\", payload: responce.data })\r\n// }\r\n\r\n   // export const showTask = id => async dispatch => {\r\n   //    const responce = await tasks.post(`/tasks/${id}`);\r\n   \r\n   //    dispatch({ type: \"SHOW_TASK\", payload: responce.data })\r\n   // };\r\n\r\n// export const idTask = (hhh) => {\r\n//     return {\r\n//         type: 'n',\r\n//         payload: hhh\r\n        \r\n        \r\n//     }\r\n// }","import React from 'react';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\n\r\n\r\nclass NewTaskForm extends React.Component {\r\n    onSubmit = (taskValue, dispatch) => {\r\n        this.props.onTaskSubmit(taskValue);    \r\n     dispatch(reset(\"newTasks\"));\r\n   // console.log(this.state.value);\r\n    }\r\n\r\n    renderInput =  ({input, meta})  => {\r\n     //  console.log(this.props.timeValue);\r\n     //   console.log(meta);\r\n     //   console.log(input);\r\n        return <input {...input} className=\"newTask-input\"></input>\r\n    }\r\n\r\n    // renderInput = (formProps) => {\r\n    //    //     console.log(formProps);\r\n    //          return <input\r\n                \r\n    //              onChange={formProps.input.onChange}\r\n    //         className=\"newTask-input\" placeholder=\"New Task\"></input>\r\n    //      }\r\n\r\n\r\n    render() {\r\n        const time = this.props.timeValue;\r\n        return(\r\n            <form className='newTask-form' onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name='task' component={this.renderInput} type='text' alt={time}   /> \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'newTasks'\r\n})(NewTaskForm);\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { showUsers, deleteUser } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Users extends React.Component{\r\n    componentDidMount() {\r\n        this.props.showUsers();   \r\n    }\r\n\r\n    sendData = (user) => {\r\n        this.props.parentCallback(user);\r\n   }\r\n\r\n   deleteUser(id) {\r\n       this.props.deleteUser(id);\r\n   }\r\n    \r\n    renderList() { \r\n        return this.props.users.map(user => {   \r\n            if(this.props.delUser === true) {\r\n                return (\r\n                    <div className='userName' key={user.id}>\r\n                        <div className='userName-link'  to={`/tasks/${user.user}`}>{user.user}\r\n                            <button className='ui button negative delUser' onClick={() => this.deleteUser(user.id)}>Delete</button>\r\n                        </div>     \r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div className='userName' key={user.id}>\r\n                        <Link className='userName-link'  to={`/tasks/${user.user}`}>{user.user}</Link>     \r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n    };\r\n    \r\n    renderUser(){\r\n        if(this.props.delUser === true) {\r\n            return (\r\n                <div>\r\n                    <h3>Users</h3>\r\n                    {this.renderList()}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <Link to={`/createNewUser`}>New User</Link>\r\n                        <Link to={`/deleteUser`}>Delete User</Link>\r\n                    </div>\r\n                    <h3>Users</h3>\r\n                    {this.renderList()} \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='userContainer'>\r\n                {this.renderUser()}  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n      users: Object.values(state.Users)\r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps, {showUsers, deleteUser}) (Users);","import { createBrowserHistory } from 'history'; \r\n\r\n\r\n\r\n\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { createUser} from '../actions';\r\nimport { Link } from 'react-router-dom';\r\nimport history from './history';\r\n\r\n\r\nclass CreateUser extends React.Component {\r\n\r\n    onSubmit = (newUser, dispatch) => {\r\n        this.props.createUser(newUser);    \r\n        dispatch(reset(\"newUser\"));\r\n        history.push(`/tasks`);\r\n    }\r\n\r\n    renderInput =  ({input})  => {\r\n        return <input {...input} className=\"newTask-input\"></input>\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form className='createUser-from' onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <h3>Insert Your Name</h3>\r\n                <Field name='user' component={this.renderInput} type='text'  />\r\n                <button className='ui positive button rr' onSubmit={this.props.handleSubmit(this.onSubmit)}>Submit</button> \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n      tasks: Object.values(state.TaskReducer)\r\n    };\r\n  }\r\n\r\nCreateUser = connect(mapStateToProps, {createUser}) (CreateUser);\r\n\r\nexport default reduxForm({\r\n    form: 'newUser'\r\n})(CreateUser);","import React from 'react';\r\n//import Task from './Task';\r\n//import NewTask from './NewTask';\r\nimport { connect } from 'react-redux';\r\nimport { createTask, doneTask, deleteTask} from '../actions';\r\nimport { showTasks } from '../actions';\r\nimport { createUser, showUsers } from '../actions';\r\nimport NewTaskForm from './NewTaskForm';\r\nimport Users from './Users';\r\nimport CreateUser from './CreateUser';\r\n\r\n\r\n\r\n\r\nclass List extends React.Component {\r\n    componentDidMount() {\r\n        this.props.showTasks();     \r\n    }\r\n    \r\n    onSubmit = (taskValue) => {\r\n        const user = this.props.user;\r\n        this.props.createTask(taskValue, user);\r\n    };\r\n\r\n    onClickDoneTask(task) {\r\n        this.props.doneTask(task);\r\n    //    console.log(task);\r\n    }\r\n\r\n    onClickDeleteTask(id) {\r\n        this.props.deleteTask(id);\r\n    }\r\n\r\n    createUserSubmit = (newUser) => {\r\n        this.props.createUser(newUser);\r\n    }\r\n\r\n    // ss(task) {\r\n    //    let timeCount = setInterval(this.hh(task), 3000);\r\n       \r\n    // }\r\n\r\n    // hh = (task) => {\r\n    //     if(task.timeValue === 'Tomorrow') {\r\n    //         alert(\"Hello!\");\r\n    //     }\r\n    // }\r\n\r\n    renderTask(task) {\r\n    //    if(this.props.timeValue === 'Today') {\r\n    //         if(task.doneValue === true) {\r\n    //             return <div className='taskList_item_undone' onClick={() => this.onClickDoneTask(task)}>{task.Today}</div>\r\n    //          } else {\r\n    //             return (\r\n    //                 <div className=\"taskList_item_done\">\r\n    //                     <div onClick={() => this.onClickDoneTask(task)} className=\"taskList_item_done-content\">{task.Today}</div>\r\n    //                     <button className=\"deleteTask-btn\" onClick={() => this.onClickDeleteTask(task.id)}><i className=\"far fa-times-circle \"></i></button>\r\n    //                 </div>\r\n    //             );\r\n    //          };\r\n    //     } else {\r\n    //         if(task.doneValue === true) {\r\n    //             return <div className='taskList_item_undone' onClick={() => this.onClickDoneTask(task)}>{task.Tomorrow}</div>\r\n    //          } else {\r\n    //             return (\r\n    //                 <div className=\"taskList_item_done\">\r\n    //                     <div onClick={() => this.onClickDoneTask(task)} className=\"taskList_item_done-content\">{task.Tomorrow}</div>\r\n    //                     <button className=\"deleteTask-btn\" onClick={() => this.onClickDeleteTask(task.id)}><i className=\"far fa-times-circle \"></i></button>\r\n    //                 </div>\r\n    //             );\r\n    //          };\r\n    //     }\r\n    //    this.ss(task);\r\n\r\n        if(task.doneValue === true) {\r\n            return <div className='taskList_item_undone' onClick={() => this.onClickDoneTask(task)}>{task.task}</div>\r\n         } else {\r\n            return (\r\n                <div className=\"taskList_item_done\">\r\n                    <div onClick={() => this.onClickDoneTask(task)} className=\"taskList_item_done-content\">{task.task}</div>\r\n                    <button className=\"deleteTask-btn\" onClick={() => this.onClickDeleteTask(task.id)}><i className=\"far fa-times-circle \"></i></button>\r\n                </div>\r\n            );\r\n         }; \r\n    }\r\n\r\n    // sss = () => {\r\n    //  //   var numbers = [65, {tee:'mina', id:3}, 2020, {tee:'mina', id:7}, 4];\r\n    //     return this.props.tasks.map(ss => {\r\n    //         if ( ss.timeValue === 'Tomorrow' ) {\r\n    //             this.props.changeTime(ss);\r\n    //             console.log(ss)\r\n    //         }\r\n    //         return;\r\n            \r\n    //     })\r\n        \r\n        \r\n        \r\n    // }\r\n\r\n    \r\n    \r\n    renderList() { \r\n        return this.props.tasks.map(task => {   \r\n            if(task.user === this.props.user) {\r\n                return (\r\n                    <div className=\"taskList_item\" key={task.id} >\r\n                        <div>      \r\n                            {this.renderTask(task)}  \r\n                                              \r\n                        </div>                  \r\n                    </div>\r\n                )\r\n            }    \r\n        })\r\n    };\r\n\r\n    rr() {\r\n        if(this.props.user === undefined) {\r\n            return <h3>Vali oma kasutaja!</h3>\r\n        } else {\r\n            return (\r\n                <div className=\"taskList-container\">\r\n                    <div className=\"taskList\">\r\n                        <h3 className=\"taskList-heading\">Today</h3>\r\n                        {this.renderList()}  \r\n                    </div>\r\n                    <NewTaskForm timeValue={this.props.timeValue} onTaskSubmit={this.onSubmit}/>\r\n                </div>\r\n            ) \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='pageContainer'>\r\n                <div>{this.rr()}</div>\r\n                <Users />   \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n      tasks: Object.values(state.TaskReducer)\r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps, {createTask, showTasks, doneTask, deleteTask, createUser}) (List);","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport List from './List';\r\nimport Users from './Users';\r\n\r\nconst Child = () => {\r\n\r\n    let { id } = useParams();\r\n    return (\r\n        <div >\r\n            <List user={id}/>\r\n        </div>\r\n    );\r\n  }\r\n\r\nexport default Child;\r\n\r\n","import React from 'react';\r\nimport Users from './Users';\r\n\r\n\r\n\r\nconst DeleteUser = () => {\r\n    return (\r\n        <div>\r\n            <Users delUser={true} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteUser;","import React from 'react';\r\nimport Header from './Header';\r\nimport { Route, Switch, BrowserRouter, Router } from 'react-router-dom';\r\nimport Child from './Child';\r\nimport CreateUser from './CreateUser';\r\nimport history from './history';\r\nimport Users from './Users';\r\nimport List from './List';\r\nimport DeleteUser from './DeleteUser';\r\nimport DeleteUsers from './DeleteUsers';\r\n\r\n\r\n// Route path={process.env.PUBLIC_URL + '/'}\r\n\r\nclass App extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <Router history={history}>\r\n                <Header />\r\n                <div className=\"ui container\">                  \r\n                    <Switch>\r\n                        <Route path=\"/tasks/:id\" exact children={<Child />} />    \r\n                        <Route path={process.env.PUBLIC_URL + '/createNewUser'} exact component={CreateUser} />   \r\n                        <Route path={process.env.PUBLIC_URL + '/'} exact component={CreateUser} /> \r\n                        <Route path=\"/tasks\" exact component={List} />     \r\n                        <Route path=\"/deleteUser\" exact component={DeleteUser} />  \r\n                        <Route path=\"/ee\" exact component={DeleteUsers} />           \r\n                    </Switch>\r\n                </div>               \r\n            </Router> \r\n        );    \r\n    }       \r\n}\r\n\r\nexport default App;","import _ from 'lodash';\r\n\r\n\r\nconst TaskReducer = (state = {}, action ) => {\r\n    switch(action.type) {\r\n        case 'CREATE_TASK':\r\n            return { ...state, [action.payload.id]: action.payload};\r\n        case 'SHOW_TASKS':\r\n            return {...state, ..._.mapKeys(action.payload, 'id')};\r\n        case 'DONE_TASK':\r\n            return {...state, [action.payload.id]: action.payload };  \r\n        case 'DELETE_TASK':\r\n            return _.omit(state, action.payload);  \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default TaskReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import _ from 'lodash';\r\n\r\n\r\nconst UserReducer = (state = {}, action ) => {\r\n    switch(action.type) {\r\n        case 'CREATE_USER':\r\n             return {...state, [action.payload.id]: action.payload };  \r\n        case 'SHOW_USERS':\r\n            return {...state, ..._.mapKeys(action.payload, 'id')};\r\n        case 'DELETE_USER':\r\n            return _.omit(state, action.payload); \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default UserReducer;\r\n\r\n","import TaskReducer from './TaskReducer';\r\nimport UserReducer from './UserReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    TaskReducer: TaskReducer,\r\n    form: formReducer,\r\n    Users: UserReducer\r\n    \r\n});\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers';\nimport './index.css';\nimport { createStore, applyMiddleware, compose} from 'redux';\nimport reduxThunk from 'redux-thunk';\n\n\nconst composeE = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducer,\n    composeE(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>,\n document.getElementById('root'));\n\n\n"],"sourceRoot":""}